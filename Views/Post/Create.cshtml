@model BlogCity.Models.Post

@{
    ViewData["Title"] = "Create";
}

<br><br>
<h4>Create Post</h4>
<hr />
<div class="row justify-content-md-center">
    <div class="col-md-8">
        <form asp-action="Create" asp-antiforgery="false"  enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
              <div class="form-group">
                <label class="control-label">Picture</label>
                <input onchange="ValidateSize(this)" id="myfile" name="file" type="file" accept="image/*">
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Text" class="control-label"></label>
                <textarea asp-for="Text" rows="10" class="form-control"></textarea>
                <span asp-validation-for="Text" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
<script>
function ValidateSize(file) {
    var fileVal=document.getElementById("myfile").value;
    if(fileVal != ""){
        var FileSize = file.files[0].size / 1024 / 1024; // in MB
        if (FileSize > 1) {
            alert('File size exceeds 1 MB');
            document.getElementById("myfile").value ="";
        }
      }
    }
</script>